version: 2.0
jobs:
  build:
    working_directory: ~/hw-kafka-client
    docker:
      - image: fpco/stack-build:latest

      - image: confluentinc/cp-zookeeper
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181

      - image: confluentinc/cp-kafka
        environment:
          KAFKA_ZOOKEEPER_CONNECT: "localhost:2181"
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    environment:
      LD_LIBRARY_PATH: /usr/local/lib

    steps:
      - checkout

      - run:
          name: Copying scripts
          command: |
            mkdir -p ~/.local/bin
            cp ./scripts/* ~/.local/bin

      - restore_cache:
          keys:
            - dot-stack-{{ checksum "stack.yaml" }}-{{ checksum "hw-kafka-client.cabal" }}
            - dot-stack
      - restore_cache:
          key: stack-work-{{ checksum "stack.yaml" }}
      - restore_cache:
          key: librdkafka-{{ checksum "scripts/build-librdkafka" }}

      - run:
          name: Build librdkafka
          command: build-librdkafka

      - run: stack setup
      - run: stack build --test --no-run-tests --haddock --no-haddock-deps

      - run:
          name: Copying documentation
          command: copy-docs

      - run:
          name: Running unit tests
          command: stack test

      - save_cache:
          key: dot-stack-base
          paths:
            - ~/.stack

      - save_cache:
          key: dot-stack-{{ checksum "stack.yaml" }}-{{ checksum "hw-kafka-client.cabal" }}
          paths:
            - ~/.stack

      - save_cache:
          key: stack-work-{{ checksum "stack.yaml" }}
          paths: ~/hw-kafka-client/.stack-work

      - save_cache:
          key: librdkafka-{{ checksum "scripts/build-librdkafka" }}
          paths: ~/hw-kafka-client/.librdkafka

      - store_artifacts:
          path: /tmp/doc

      - deploy:
          command: |
            if [ "$CIRCLE_PROJECT_USERNAME" == "haskell-works" ]; then
              if [[ "$CIRCLE_BRANCH" == master ]]; then
                when tag autotag
              elif [[ "$CIRCLE_TAG" =~ v.* ]]; then
                publish && publish-docs
              fi
            fi
